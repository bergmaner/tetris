{"version":3,"sources":["slices.js","components/Cell.js","components/Stage.js","components/Display.js","components/Button.js","gameConfig.js","hooks/useInterval.js","hooks/usePlayer.js","hooks/useStage.js","hooks/useStatus.js","components/Tetris.js","App.js","serviceWorker.js","index.js"],"names":["Slices","0","shape","color","I","J","L","O","S","T","Z","randomSlice","randSlice","Math","floor","random","length","Square","styled","div","props","background","type","React","memo","Board","height","width","Stage","stage","map","row","cell","index","key","DisplayComponent","gameOver","Display","text","Submit","button","Button","handleClick","onClick","createStage","Array","from","fill","checkCollision","player","moveX","x","moveY","y","slice","pos","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","usePlayer","useState","collide","setPlayer","rotate","matrix","direction","rotatedSlice","m","col","reverse","updatePlayerPosition","useCallback","prev","resetPlayer","STAGE_WIDTH","clone","JSON","parse","stringify","posX","offset","useStage","setStage","rowsCount","setRowsCount","updateStage","newStage","updatedStage","forEach","console","log","value","reduce","result","findIndex","unshift","push","useStatus","score","setScore","rows","setRows","level","setLevel","points","calcScore","Container","TetrisWrapper","Menu","Tetris","rotatePlayer","dropInterval","setDropInterval","end","setEnd","handleStart","drop","movePlayer","handleMove","keyCode","role","tabIndex","onKeyDown","e","onKeyUp","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5d2b1a42.chunk.js","sourcesContent":["export const Slices = {\r\n  0: { shape: [[0]], color: \"0, 0, 0\" },\r\n  I: {\r\n    shape: [\r\n      [0, \"I\", 0, 0],\r\n      [0, \"I\", 0, 0],\r\n      [0, \"I\", 0, 0],\r\n      [0, \"I\", 0, 0],\r\n    ],\r\n    color: \"90, 230, 230\",\r\n  },\r\n  J: {\r\n    shape: [\r\n      [0, \"J\", 0],\r\n      [0, \"J\", 0],\r\n      [\"J\", \"J\", 0],\r\n    ],\r\n    color: \"40, 100, 220\",\r\n  },\r\n  L: {\r\n    shape: [\r\n      [0, \"L\", 0],\r\n      [0, \"L\", 0],\r\n      [0, \"L\", \"L\"],\r\n    ],\r\n    color: \"220, 170, 40\",\r\n  },\r\n  O: {\r\n    shape: [\r\n      [\"O\", \"O\"],\r\n      [\"O\", \"O\"],\r\n    ],\r\n    color: \"220, 220, 240\",\r\n  },\r\n  S: {\r\n    shape: [\r\n      [0, \"S\", \"S\"],\r\n      [\"S\", \"S\", 0],\r\n      [0, 0, 0],\r\n    ],\r\n    color: \"50, 210, 55\",\r\n  },\r\n  T: {\r\n    shape: [\r\n      [0, 0, 0],\r\n      [\"T\", \"T\", \"T\"],\r\n      [0, \"T\", 0],\r\n    ],\r\n    color: \"130, 60, 200\",\r\n  },\r\n  Z: {\r\n    shape: [\r\n      [\"Z\", \"Z\", 0],\r\n      [0, \"Z\", \"Z\"],\r\n      [0, 0, 0],\r\n    ],\r\n    color: \"225, 80, 80\",\r\n  },\r\n};\r\nexport const randomSlice = () => {\r\n  const slices = \"IJLOSTZ\";\r\n  const randSlice = slices[Math.floor(Math.random() * slices.length)];\r\n  return Slices[randSlice];\r\n};\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Slices } from \"../slices\"\r\nconst Square = styled.div`\r\nwidth: auto;\r\nbackground: rgba(${ props => props.background },0.8);\r\nborder: ${ props => props.type === 0 ? \"0px solid\" : \"4px solid\" };\r\nborder-color: rgba(${ props => props.background },0.5);\r\n`;\r\n\r\nconst Cell = ({type}) =>{\r\n    return(\r\n    <Square type={type} background={Slices[type].color} />\r\n    )\r\n}\r\nexport default React.memo(Cell);","import React from \"react\"\r\nimport Cell from \"./Cell\"\r\nimport styled from 'styled-components'\r\n\r\nconst Board = styled.div`\r\ndisplay: grid;\r\ngrid-template-rows: repeat(${props => props.height},calc(25vw / ${props => props.width}));\r\ngrid-template-columns: repeat(${props => props.width},1fr);\r\ngrid-gap: 1px;\r\nborder: 2px solid #333;\r\nwidth: 100%;\r\nmax-width: 25vw;\r\nbackground: #111;\r\n`;\r\n\r\nconst Stage = ({ stage }) =>{\r\n    return(\r\n        <Board width={stage[0].length} height={stage.length}>{stage.map((row) => row.map((cell, index) => <Cell key={index} type={cell[0]}/>))}</Board>\r\n    )\r\n}\r\nexport default Stage","import React from \"react\"\r\nimport styled from 'styled-components';\r\n\r\nconst DisplayComponent = styled.div`\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 0 20px 0;\r\n    padding: 20px;\r\n    border: 4px solid #333;\r\n    min-height: 30px;\r\n    width: 100%;\r\n    border-radius: 20px;\r\n    color: ${props => props.gameOver ? \"red\" : \"#999\" };\r\n    background: #000;\r\n    font-size: 0.8rem;\r\n\r\n\r\n`;\r\n\r\nconst Display = ({gameOver, text}) =>{\r\n\r\n    return(\r\n    <DisplayComponent gameOver={gameOver}>{text}</DisplayComponent>\r\n    )\r\n}\r\nexport default Display;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Submit = styled.button`\r\n  box-sizing: border-box;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  border: none;\r\n  color: white;\r\n  background: #333;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Button = ({ text, handleClick }) => {\r\n  return <Submit onClick={() => handleClick()}>{text}</Submit>;\r\n};\r\nexport default Button;\r\n","export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () =>\r\n    new Array(STAGE_WIDTH).fill([0, \"clear\"])\r\n  );\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  for (let y = 0; y < player.slice.length; y++) {\r\n    for (let x = 0; x < player.slice[y].length; x++) {\r\n      if (player.slice[y][x] !== 0) {\r\n        if (\r\n          !stage[y + player.pos.y + moveY] ||\r\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\r\n            \"clear\"\r\n        )\r\n          return true;\r\n      }\r\n    }\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\nexport default useInterval;\r\n","import { useState, useCallback } from \"react\";\r\nimport { randomSlice, Slices } from \"../slices\";\r\nimport { STAGE_WIDTH, checkCollision } from \"../gameConfig\";\r\n\r\nconst usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    slice: Slices[0].shape,\r\n    collide: false,\r\n  });\r\n\r\n  const rotate = (matrix, direction) => {\r\n    const rotatedSlice = matrix.map((m, index) =>\r\n      matrix.map((col) => col[index])\r\n    );\r\n    if (direction > 0) return rotatedSlice.map((row) => row.reverse());\r\n    return rotatedSlice.reverse();\r\n  };\r\n\r\n  const rotatePlayer = (stage, direction) => {\r\n    const clone = JSON.parse(JSON.stringify(player));\r\n    clone.slice = rotate(clone.slice, direction);\r\n    const posX = clone.pos.x;\r\n    let offset = 1;\r\n    while (checkCollision(clone, stage, { x: 0, y: 0 })) {\r\n      clone.pos.x += offset;\r\n      offset = -(offset + (offset > 0 ? 1 : -1));\r\n      if (offset > clone.slice[0].length) {\r\n        rotate(clone.slice, -direction);\r\n        clone.pos.x = posX;\r\n        return;\r\n      }\r\n    }\r\n    setPlayer(clone);\r\n  };\r\n\r\n  const updatePlayerPosition = useCallback(({ x, y, collide }) => {\r\n    setPlayer((prev) => ({\r\n      ...prev,\r\n      pos: { x: prev.pos.x += x , y: prev.pos.y += y },\r\n      collide,\r\n    }));\r\n  });\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      slice: randomSlice().shape,\r\n      collide: false,\r\n    });\r\n  });\r\n  return [player, updatePlayerPosition, resetPlayer, rotatePlayer];\r\n};\r\nexport default usePlayer;\r\n","import { useState, useEffect } from \"react\";\r\nimport { createStage } from \"../gameConfig\";\r\n\r\nconst useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCount, setRowsCount] = useState(0);\r\n  useEffect(() => {\r\n    const sweep = (newStage) =>\r\n      newStage.reduce((result, row) => {\r\n        setRowsCount(0);\r\n        if (row.findIndex((cell) => cell[0] === 0) === -1) {\r\n          setRowsCount((prev) => prev + 1);\r\n          result.unshift(new Array(newStage[0].length).fill([0, \"clear\"]));\r\n          return result;\r\n        }\r\n        result.push(row);\r\n        return result;\r\n      }, []);\r\n\r\n    const updateStage = (prev) => {\r\n      const updatedStage = prev.map((row) =>\r\n        row.map((cell) => (cell[1] === \"clear\" ? [0, \"clear\"] : cell))\r\n      );\r\n\r\n      player.slice.forEach((row, y) => {\r\n        console.log(\"row\",row,\"y\",y);\r\n        row.forEach((value, x) => {\r\n          console.log(\"value\",value,\"x\",x);\r\n          console.log(\"player\",player)\r\n          if (value !== 0) {\r\n            updatedStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collide ? \"merge\" : \"clear\"}`,\r\n            ];\r\n          }\r\n        });\r\n      });\r\n      if (player.collide) {\r\n        resetPlayer();\r\n        return sweep(updatedStage);\r\n      }\r\n      return updatedStage;\r\n    };\r\n\r\n    setStage((prev) => updateStage(prev));\r\n  }, [player]);\r\n\r\n  return [stage, setStage, rowsCount];\r\n};\r\nexport default useStage;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nconst useStatus = (rowsCount) => {\r\n  const [score, setScore] = useState(0);\r\n  const [rows, setRows] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n\r\n  const points = [40, 100, 300, 1200];\r\n  const calcScore = useCallback(() => {\r\n    if (rowsCount > 0) {\r\n      setScore((prev) => prev + points[rowsCount - 1] * (level + 1));\r\n      setRows((prev) => prev + rowsCount);\r\n    }\r\n  }, [level, points, rowsCount]);\r\n  useEffect(() => {\r\n    calcScore();\r\n  }, [rowsCount]);\r\n  return [score, setScore, rows, setRows, level, setLevel];\r\n};\r\nexport default useStatus;\r\n","import React, { useState } from \"react\";\r\nimport Stage from \"./Stage\";\r\nimport Display from \"./Display\";\r\nimport Button from \"../components/Button\";\r\nimport { createStage, checkCollision } from \"../gameConfig\";\r\nimport styled from \"styled-components\";\r\nimport useInterval from \"../hooks/useInterval\";\r\nimport usePlayer from \"../hooks/usePlayer\";\r\nimport useStage from \"../hooks/useStage\";\r\nimport useStatus from \"../hooks/useStatus\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #111;\r\n  overflow: hidden;\r\n`;\r\nconst TetrisWrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 40px;\r\n  margin: 0 auto;\r\n  max-width: 900px;\r\n`;\r\nconst Menu = styled.div`\r\n  width: 100%;\r\n  max-width: 200px;\r\n  display: block;\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Tetris = () => {\r\n  const [player, updatePlayerPosition, resetPlayer, rotatePlayer] = usePlayer();\r\n  const [stage, setStage, rowsCount] = useStage(player, resetPlayer);\r\n  const [score, setScore, rows, setRows, level, setLevel] = useStatus(rowsCount);\r\n  const [dropInterval, setDropInterval] = useState(null);\r\n  const [end, setEnd] = useState(false);\r\n\r\n  const handleStart = () => {\r\n    setStage(createStage());\r\n    setDropInterval(1000);\r\n    resetPlayer();\r\n    setEnd(false);\r\n    setScore(0);\r\n    setRows(0);\r\n    setLevel(0);\r\n  };\r\n  const drop = () => {\r\n    if(rows > (level + 1) * 10){\r\n      setLevel(prev=>prev + 1)\r\n      setDropInterval(1000/(level + 1) + 200)\r\n    }\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 }))\r\n      updatePlayerPosition({ x: 0, y: 1, collide: false });\r\n    else {\r\n      if (player.pos.y < 1) {\r\n        setEnd(true);\r\n        setDropInterval(null);\r\n      }\r\n\r\n      updatePlayerPosition({ x: 0, y: 0, collide: true });\r\n    }\r\n  };\r\n  const handleDrop = () => {\r\n    setDropInterval(null);\r\n    drop();\r\n  };\r\n\r\n  const handleKeyUp = ({ keyCode }) => {\r\n    if (!end) {\r\n      if (keyCode === 40) {\r\n        setDropInterval(1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const movePlayer = (direction) => {\r\n    if (!checkCollision(player, stage, { x: direction, y: 0 }))\r\n      updatePlayerPosition({ x: direction, y: 0 });\r\n  };\r\n\r\n  const handleMove = ({ keyCode }) => {\r\n    if (!end) {\r\n      switch (keyCode) {\r\n        case 37:\r\n          movePlayer(-1);\r\n          break;\r\n        case 38:\r\n          rotatePlayer(stage, 1);\r\n          break;\r\n        case 39:\r\n          movePlayer(1);\r\n          break;\r\n        case 40:\r\n          handleDrop();\r\n          break;\r\n      }\r\n    }\r\n  };\r\n  useInterval(() => {\r\n    drop();\r\n  }, dropInterval);\r\n  return (\r\n    <Container\r\n      role=\"button\"\r\n      tabIndex=\"0\"\r\n      onKeyDown={(e) => handleMove(e)}\r\n      onKeyUp={handleKeyUp}\r\n    >\r\n      kkkkkkkkkkkkk\r\n      <TetrisWrapper>\r\n        <Stage stage={stage} />\r\n        <div>\r\n          <Menu>\r\n            {end ? (\r\n              <div>\r\n                <Display gameOver={end} text=\"Game Over\" />\r\n                <Button handleClick={handleStart} text=\"Restart\" />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Display text={`Score: ${score}`} />\r\n                <Display text={`Rows: ${rows}`} />\r\n                <Display text={`Level: ${level}`} />\r\n                <Button handleClick={handleStart} text=\"Start\" />\r\n              </div>\r\n            )}\r\n          </Menu>\r\n        </div>\r\n      </TetrisWrapper>\r\n    </Container>\r\n  );\r\n};\r\nexport default Tetris;\r\n","import React from 'react';\nimport Tetris from \"./components/Tetris\"\n\nconst App = () => {\n  return (\n    <div>\n      <Tetris/>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}